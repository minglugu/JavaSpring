# 1. 当前项目，连接数据库的信息
# 2. MyBatis xml的保存路径
# 配置完，这两项，ssm的项目才算搭建完毕


Spring-AOP组成：
	1. 切面(Aspect)：	定义AOP是针对哪个统一的功能的，这个功能叫做一个切面，比如用户登录功能或方法的统计日志，
				他们就是一个切面。切面 = 切点 + 通知。
	  包含：通知，切点和切面的类，相当于AOP实现的某个功能的集合
	
	2. 连接点(Joint Point):	所有可能触发AOP（拦截方法的点）就称之为连接点
	   连接点相当于需要被增强的某个AOP功能的所有方法。

	3. 切点(pointcut):	定义AOP拦截的规则的，规定哪些东西可以触发执行里面的通知。切点就是用户登录验证方法的声明。(五大)通知来实现。

	4. 通知(advice)：切面的工作被称之为通知。有如下5种类型：
	   @Before	我拦截完了之后，在执行这个方法之前，我先执行的功能。比如说，用户登录的验证功能，添加文章之前，要先实现登录。
	   @After	后置通知。所有方法执行完了，记录了日志。
	   @AfterReturning 	返回数据之后。这个方法return之后，返回一个通知。比如说记录执行时间 = 开始时间 - 结束时间。
	   @AfterThrowing		抛出异常之后的通知，错误日志，发送短信给业务/开发人员。
	   @Around			环绕通知。执行的方法包起来，前后可以执行一些任务。
	   规定了AOP，执行的时机和执行的方法。

very detailed YouTube video for this topic:
Java dynamic proxies
https://www.youtube.com/watch?v=r43IH5Qhz_Q

